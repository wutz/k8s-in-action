global:
  storageClass: "shared-juice"

manager:
  metrics:
    enable: true
  config:
    verbose: true
    pprofPort: 18066
    log:
      level: info
    job:
      preheat:
        registryTimeout: 600m
        tls:
          insecureSkipVerify: true
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists    
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - mn01.hs1h.local
            - mn02.hs1h.local
            - mn03.hs1h.local   

scheduler:
  metrics:
    enable: true
  config:
    verbose: true
    log:
      level: info
    pprofPort: 18066
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists    
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - mn01.hs1h.local
            - mn02.hs1h.local
            - mn03.hs1h.local   

seedClient:
  metrics:
    enable: true
  config:
    verbose: true
    download:
      pieceTimeout: 3600s
    scheduler:
      scheduleTimeout: 3600s
    log:
      level: info
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - gn001.hs1h.local  
            - gn002.hs1h.local
            - gn003.hs1h.local   

client:
  metrics:
    enable: true
  config:
    verbose: true
    log:
      level: info
    proxy:
      registryMirror:
        addr: https://cr.hs1h-int.example.com
        basicAuth:
          username: admin
          password: base64_password
  dfinit:
    enable: true
    config:
      containerRuntime:
        containerd:
          configPath: /var/lib/rancher/k3s/agent/etc/containerd/config.toml
          registries:
            - hostNamespace: cr.hs1h-int.example.com
              serverAddr: https://cr.hs1h-int.example.com
              capabilities: ['pull', 'resolve']
              skipVerify: true

mysql:
  enable: false

externalMysql:
  # -- Running GORM migration.
  migrate: true
  # -- External mysql hostname.
  host: rm-ejrctet92gzt4rmwb.mysql.rds.hs1b-int.example.com
  # -- External mysql username.
  username: dragonfly
  # -- External mysql password.
  password: password
  # -- External mysql database name.
  database: dragonfly
  # -- External mysql port.
  port: 3306

redis:
  enable: false

externalRedis:
  addrs:
    - "r-uvnz4dxcdnmzwshd3.redis.rds.hs1b-int.example.com:6379"
  password: "password"
  # -- External redis db.
  db: 2
  # -- External redis broker db.
  brokerDB: 1
  # -- External redis backend db.
  backendDB: 2
  # -- External redis networkTopology db.
  networkTopologyDB: 3 
